<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAbdEVYdFRpdGxlAEZpbmQ7SWQ7TG9jYXRlO1NlYXJjaMjN118AAAMqSURBVDhPbZJ9TMxxHMev
        PDQy0R/YjNk0M2wtE5IecE4e6qJT47qOpce76u7s0vNFnauu2q2oEReVrOKi4tQwKrZMT5bVJZUlJUQP
        6h7K2/f3qza23ttr38/34f3e94nxj8wICwmLCYsI5gRK1Pgc/wkAgxGd8YiqzX0FaRslCo1WmlphDE8u
        rfbwjdocnnBrQ4KqpjIuq8YQnfm4UhhXsJ6sNZMoHlCemQBJCt2xEF4qfV3/9iM6ur5AXVILQWKJIS7r
        ib6htRedPV+RW/QUIrmmlqxdIJSVUZ6ZACJzzln5vqTsJxj8NobaBh1Ss0tw7kIhIpVV6Bv4BV33EPLv
        PoMwvhg88VUH4qGPMxdgwY3IKbqvbUFP3zC0L99DGJkN5+MyeAZkQdf7HR3d33DnQT2Co/LAFeXdJB7q
        rmYCNtkeWHdGWqhv+zCIpvYvKNU2wk+ghMORGBzlK9HU8RVtXUO4V92MsNhr8AnLm7R15KwifjM6wJ2v
        LCgsf4Ph0UmYpqbR2TuEmGQ13HlyZFyvQv/QKMZ+62EwmvB54DtKHtYh7WpZNYvFsiQh5gy2/xX958ER
        ssV38BKW4u7jNtS8aER6jga80GQc9hYTRDRHSE0xMyaG28mIFww3rso0PqEHV6JBYPkA/GQV5DJ/ITf/
        EQ6eEEKWVoCEVELKbcQrbiFOkY9YuZreJYvMM1w4yd2t7X1Qa5rgE10OdWUL6hraocwqHt7vHgRp4jVy
        tD8IEKfDYJqG3jiNy5lFiIjJxn6PIDC27eWHiRIL8exVGz71/4D2eTP8xSpERMpvOLv5I1SaSUxT4AUn
        YdJggm/gRYxPmhAQrgA1T72GlY0dR7LVKbhji1MIbHac1q2xcZEymUwbR6YfzoQk4bd+Cif5MRifMMGL
        dwEj40acOhcPRyafDqD+/FIC9TRrCasJltbW1st3u54Ghx+FsQkj3H0ktPHnmAHiWBXYp85jlysX9GeY
        D6Jl9k7eOEZu/9BxAQ55CsDyDMVBdgiY7GB6zH6v9/xmCqIltjvZL7c7cLDdwYvGjtR2e2b7pKXm5zVT
        EM0dzYqw4h9WzkJqxtK/RHYdrBdy7oUAAAAASUVORK5CYII=
</value>
  </data>
</root>